{"ast":null,"code":"var _jsxFileName = \"/Users/yeqinghan/mp4/client/src/components/TodoInput.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport DatePicker from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\";\nexport default class TodoInput extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangeTask = this.onChangeTask.bind(this);\n    this.onChangeCompleted = this.onChangeCompleted.bind(this);\n    this.onChangeDate = this.onChangeDate.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.state = {\n      task: '',\n      completed: false,\n      date: new Date(),\n      tasks: []\n    };\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:5000/task/').then(response => {\n      if (response.data.length > 0) {\n        this.setState({\n          tasks: response.data.map(task => task.task),\n          task: response.data[0].task\n        });\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  onChangeTask(e) {\n    this.setState({\n      task: e.target.value\n    });\n  }\n\n  onChangeCompleted(e) {\n    this.setState({\n      completed: e.target.value\n    });\n  }\n\n  onChangeDate(date) {\n    this.setState({\n      date: date\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const newTask = {\n      task: this.state.task,\n      completed: this.state.completed,\n      date: this.state.date\n    };\n    console.log(newTask);\n    axios.post('http://localhost:5000/task/add', newTask).then(res => console.log(res.data));\n    window.location = '/';\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }\n    }, \"Please Input a New Task\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 25\n      }\n    }, \"Task: \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      required: true,\n      className: \"form-control\",\n      value: this.state.task,\n      onChange: this.onChangeTask,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 25\n      }\n    }, \"Status: \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"Boolean\",\n      required: true,\n      className: \"form-control\",\n      value: this.state.completed,\n      onChange: this.onChangeCompleted,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"select\", {\n      ref: \"userInput\",\n      required: true,\n      className: \"form-control\",\n      value: this.state.completed,\n      onChange: this.onChangeCompleted,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 25\n      }\n    }, \"}\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 25\n      }\n    }, \"Date: \"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(DatePicker, {\n      selected: this.state.date,\n      onChange: this.onChangeDate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      className: \"btn btn-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/Users/yeqinghan/mp4/client/src/components/TodoInput.js"],"names":["React","Component","axios","DatePicker","TodoInput","constructor","props","onChangeTask","bind","onChangeCompleted","onChangeDate","onSubmit","state","task","completed","date","Date","tasks","componentDidMount","get","then","response","data","length","setState","map","catch","error","console","log","e","target","value","preventDefault","newTask","post","res","window","location","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport DatePicker from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nexport default class TodoInput extends Component {\n    constructor(props) {\n        super(props);\n\n        this.onChangeTask = this.onChangeTask.bind(this);\n        this.onChangeCompleted = this.onChangeCompleted.bind(this);\n        this.onChangeDate = this.onChangeDate.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n\n        this.state = {\n            task: '',\n            completed: false,\n            date: new Date(),\n            tasks: []\n        }\n    }\n\n    componentDidMount() {\n        axios.get('http://localhost:5000/task/')\n            .then(response => {\n                if (response.data.length > 0) {\n                    this.setState({\n                        tasks: response.data.map(task => task.task),\n                        task: response.data[0].task\n                    })\n                }\n            })\n            .catch((error) => {\n                console.log(error);\n            })\n\n    }\n\n    onChangeTask(e) {\n        this.setState({\n            task: e.target.value\n        })\n    }\n\n    onChangeCompleted(e) {\n        this.setState({\n            completed: e.target.value\n        })\n    }\n\n    onChangeDate(date) {\n        this.setState({\n            date: date\n        })\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n\n        const newTask = {\n            task: this.state.task,\n            completed: this.state.completed,\n            date: this.state.date\n        }\n\n        console.log(newTask);\n\n        axios.post('http://localhost:5000/task/add', newTask)\n            .then(res => console.log(res.data));\n\n        window.location = '/';\n    }\n\n    render() {\n        return (\n            <div>\n                <h3>Please Input a New Task</h3>\n                <form onSubmit={this.onSubmit}>\n                    <div className=\"form-group\">\n                        <label>Task: </label>\n                        <input  type=\"text\"\n                                required\n                                className=\"form-control\"\n                                value={this.state.task}\n                                onChange={this.onChangeTask}\n                        />\n\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Status: </label>\n                        <input  type=\"Boolean\"\n                                required\n                                className=\"form-control\"\n                                value={this.state.completed}\n                                onChange={this.onChangeCompleted}\n                        />\n                        <select ref=\"userInput\"\n                                required\n                                className=\"form-control\"\n                                value={this.state.completed}\n                                onChange={this.onChangeCompleted}>\n                            }\n                        </select>\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Date: </label>\n                        <div>\n                            <DatePicker\n                                selected={this.state.date}\n                                onChange={this.onChangeDate}\n                            />\n                        </div>\n                    </div>\n\n                    <div className=\"form-group\">\n                        <input type=\"submit\" value=\"Submit\" className=\"btn btn-primary\" />\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}